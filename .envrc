# shellcheck disable=SC2034,SC2155,SC3011
mkdir -p secrets

# API Keys/Tokens:
export VULTR_API_KEY="$(op item get 'Vultr API Key' --fields=password --reveal)"
export CLOUDFLARE_API_TOKEN="$(op item get 'Cloudflare API Token (frankenstructure)' --fields=credential --reveal)"

# AWS Keys:
FRANKENSTORAGE_PATH="$(pwd)/secrets/frankenstorage.yaml"
if ! test -e "$FRANKENSTORAGE_PATH"; then
    # https://docs.vultr.com/how-to-use-s3cmd-with-vultr-object-storage
    vultr --output=json object-storage list \
        | jq > "$FRANKENSTORAGE_PATH" '.object_storages[] | select(.label == "frankenstorage")'
fi
export AWS_ACCESS_KEY_ID="$(jq --raw-output '.s3_access_key' "$FRANKENSTORAGE_PATH")"
export AWS_SECRET_ACCESS_KEY="$(jq --raw-output '.s3_secret_key' "$FRANKENSTORAGE_PATH")"
watch_file "$FRANKENSTORAGE_PATH"

# Kubectl Config:
export KUBECONFIG="$(pwd)/secrets/frank8s.yaml"
if ! test -e "$KUBECONFIG"; then
    vultr --output=json kubernetes list \
        | jq --raw-output '.vke_clusters[] | select(.label == "frank8s").id' \
        | xargs vultr kubernetes config \
        | base64 --decode > "$KUBECONFIG"
    chmod 600 "$KUBECONFIG"
fi
watch_file "$KUBECONFIG"

# SMTP
SMTP_CONFIG="$(op item get 'ProtonMail SMTP Token (Monitoring)' \
                 --reveal \
                 --fields="SMTP.server,SMTP.port,SMTP.username,SMTP.password,SMTP.security,SMTP.authMethod" \
                 --format=json \
               | jq 'map({key:.label,value}) | from_entries')"

# Terraform Variables:
# docker login ghcr.io --username=$GITHUB_EMAIL --password=$GITHUB_TOKEN
export TF_VAR_cloudflare_api_token="$CLOUDFLARE_API_TOKEN"
export TF_VAR_discord_webhook_alerts="$(op item get 'Discord Webhook (breaktheloop)' --fields=url --reveal)"
export TF_VAR_github_username="$(git config get user.email)"
export TF_VAR_github_token="$(op item get 'GitHub Token (ghcr.io)' --fields=token --reveal)"
export TF_VAR_grafana_admin_password="$(op item get 'Grafana (frank.sh)' --fields=password --reveal)"
export TF_VAR_kubeconfig="$KUBECONFIG"
export TF_VAR_smtp="$SMTP_CONFIG"
export TF_VAR_vultr_api_key="$VULTR_API_KEY"
